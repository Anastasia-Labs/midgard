x-logging:
  &default-logging
  driver: "json-file"
  options:
    max-size: "1m"
    max-file: "1"
    tag: "{{.Name}}"

services:
  midgard-node:
    build:
      context: .
      additional_contexts:
        - sdk=../midgard-sdk
      dockerfile: ./Dockerfile
    env_file:
      - .env
    labels:
      logging: "promtail"
      logging_jobname: "containerlogs"
    command:
      - node
      - ./dist/index.js
      - playground
    ports:
      - "3000:3000" # api server
      - "9464:9464" # prometheus exporter
      # - "4318:4318" # opentelemetry
    volumes:
      - ./db:/app/db
    depends_on:
      - postgres
    logging: *default-logging
    networks:
      midgard_net:
    # restart: always
  
  postgres:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres-data:/var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    networks:
      midgard_net:
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    command:
      - "postgres"
      - "-c"
      - "max_connections=100"
      - "-c"
      - "shared_buffers=128MB"
      - "-c"
      - "effective_cache_size=512MB"
      - "-c"
      - "work_mem=16MB"
      - "-c"
      - "maintenance_work_mem=128MB"
    logging:
      options:
        max-size: "10m"
        max-file: "3"

networks:
  midgard_net:
  
volumes:
  postgres-data:
    driver: local
  grafana-data:
    driver: local
  prometheus-data:
    driver: local
  tempo-data:
    driver: local
